name: Build and Release

on:
  release:
    types: [published]
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Node.js dependencies
        run: npm install
        working-directory: ./web

      - name: Build Vue3 project
        run: npm run build
        working-directory: ./web

      - name: Copy web/dist to src/server/web
        run: |
          cp -r web/dist src/server/web

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build Go project
        run: |
          cd src
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${{ github.ref_name }}" -o ollama-watcher-linux-amd64 .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ollama-watcher-linux-amd64
          path: src/ollama-watcher-linux-amd64

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: src/ollama-watcher-linux-amd64
          tag: ${{ github.ref }}
          file_glob: true

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ollama-watcher-linux-amd64
  #         path: build/ollama-watcher-linux-amd64


      # - name: Get current date and time
      #   id: date
      #   run: echo "CURRENT_DATE=$(date -u '+%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV

      # - name: Create Release
      #   id: create_release
      #   uses: comnoco/create-release@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref_name }}
      #     release_name: |
      #       ${{
      #         startsWith(github.ref, 'refs/tags/') && github.ref_name || 
      #         format('Release-{0}', env.CURRENT_DATE)
      #       }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: build/ollama-watcher-linux-amd64
      #     asset_name: ollama-watcher-linux-amd64
      #     asset_content_type: application/octet-stream
